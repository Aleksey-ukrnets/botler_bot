import express from "express";
import TelegramBot from "node-telegram-bot-api";
import process from "process";
import { google } from "googleapis";

const app = express();
const bot_key = process.env.API_BOT_KEY;

if (!bot_key) {
  throw new Error("API_BOT_KEY environment variable is required");
}

const bot = new TelegramBot(bot_key, { polling: true });

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
interface UserData {
  step: number;
  sources: string[];
  marketplaces?: string;
  socialNetworks?: string;
  telegramReason?: string;
  contacts?: string;
}

const userData: { [key: number]: UserData } = {};

// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
const welcomeMessage = `üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ—â–Ω–∏–∫ –∫–æ–º–∞–Ω–¥—ã Botler ‚Äî –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ Telegram-–º–∞–≥–∞–∑–∏–Ω–æ–≤.

–°–µ–π—á–∞—Å –º—ã –∏—â–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ –≤ Telegram, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Å—Ç–∏ –∫–æ—Ä–æ—Ç–∫–æ–µ –∏–Ω—Ç–µ—Ä–≤—å—é (15‚Äì20 –º–∏–Ω—É—Ç) –∏ –ø–æ–Ω—è—Ç—å, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –Ω–∞—à –ø—Ä–æ–¥—É–∫—Ç –µ—â—ë —É–¥–æ–±–Ω–µ–µ.

–ò–Ω—Ç–µ—Ä–≤—å—é –ø—Ä–æ–π–¥—ë—Ç –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –∏–ª–∏ –≤ Zoom, –≤ —É–¥–æ–±–Ω–æ–µ –¥–ª—è –≤–∞—Å –≤—Ä–µ–º—è.
–í –∑–Ω–∞–∫ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ ‚Äî –∑–∞–ø–∏—à–µ–º –≤–∞—Å –≤ –≥—Ä—É–ø–ø—É –∞–ª—å—Ñ–∞-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –Ω–∞ 3 –≥–æ–¥–∞! üòä

–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω—ë–º —Å –ø–∞—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, –±—É–¥–µ—Ç –ª–∏ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ üí¨`;

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  userData[chatId] = {
    step: 0,
    sources: [],
  };

  bot.sendMessage(chatId, welcomeMessage).then(() => {
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø–µ—Ä–≤–æ–º—É –≤–æ–ø—Ä–æ—Å—É
    askFirstQuestion(chatId);
  });
});

// –ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å - –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
function askFirstQuestion(chatId: number) {
  userData[chatId].step = 1;

  const keyboard = {
    inline_keyboard: [
      [{ text: "‚ñ´Ô∏è Telegram", callback_data: "source_telegram" }],
      [{ text: "‚ñ´Ô∏è –°–∞–π—Ç", callback_data: "source_website" }],
      [{ text: "‚ñ´Ô∏è –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã", callback_data: "source_marketplaces" }],
      [{ text: "‚ñ´Ô∏è –°–æ—Ü —Å–µ—Ç–∏", callback_data: "source_social" }],
      [
        {
          text: "‚ñ´Ô∏è –ï—â–µ –Ω–µ –ø—Ä–æ–¥–∞—é, –Ω–æ –ø–ª–∞–Ω–∏—Ä—É—é –Ω–∞—á–∞—Ç—å",
          callback_data: "source_planning",
        },
      ],
      [
        {
          text: "‚ñ´Ô∏è –ù–µ –ø–ª–∞–Ω–∏—Ä—É—é –ø—Ä–æ–¥–∞–≤–∞—Ç—å –æ–Ω–ª–∞–π–Ω",
          callback_data: "source_no_plans",
        },
      ],
      [{ text: "‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data: "sources_done" }],
    ],
  };

  bot.sendMessage(
    chatId,
    "1. –£–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ):",
    {
      reply_markup: keyboard,
    }
  );
}

// –í—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å
function askSecondQuestion(chatId: number) {
  userData[chatId].step = 2;

  bot.sendMessage(
    chatId,
    "2. –ö–∞–∫ –≤—ã –ø—Ä–∏—à–ª–∏ –∫ —Ç–æ–º—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –≤ Telegram? ü§î\n\n–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç:"
  );
}

// –¢—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å
function askThirdQuestion(chatId: number) {
  userData[chatId].step = 3;

  bot.sendMessage(
    chatId,
    "3. –£–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏ (–ø–æ—á—Ç–∞, —Ç–µ–ª–µ–≥—Ä–∞–º, —Å–æ—Ü —Å–µ—Ç—å, —Ç–µ–ª–µ—Ñ–æ–Ω) üìû\n\n–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:"
  );
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∫–Ω–æ–ø–æ–∫
bot.on("callback_query", (callbackQuery) => {
  const msg = callbackQuery.message;
  const chatId = msg?.chat.id;
  const data = callbackQuery.data;

  if (!chatId || !userData[chatId]) return;

  const user = userData[chatId];

  if (user.step === 1) {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤
    if (data === "sources_done") {
      if (user.sources.length === 0) {
        bot.answerCallbackQuery(callbackQuery.id, {
          text: "–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∏—Å—Ç–æ—á–Ω–∏–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤",
          show_alert: true,
        });
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
      if (user.sources.includes("–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã") && !user.marketplaces) {
        bot.sendMessage(chatId, "–£–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–∏–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ:");
        user.step = 1.1; // –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —à–∞–≥
        return;
      }

      if (user.sources.includes("–°–æ—Ü —Å–µ—Ç–∏") && !user.socialNetworks) {
        bot.sendMessage(
          chatId,
          "–£–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ:"
        );
        user.step = 1.2; // –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —à–∞–≥
        return;
      }

      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫–æ –≤—Ç–æ—Ä–æ–º—É –≤–æ–ø—Ä–æ—Å—É
      askSecondQuestion(chatId);
    } else {
      // –î–æ–±–∞–≤–ª—è–µ–º/—É–±–∏—Ä–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫
      const sourceMap: { [key: string]: string } = {
        source_telegram: "Telegram",
        source_website: "–°–∞–π—Ç",
        source_marketplaces: "–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã",
        source_social: "–°–æ—Ü —Å–µ—Ç–∏",
        source_planning: "–ï—â–µ –Ω–µ –ø—Ä–æ–¥–∞—é, –Ω–æ –ø–ª–∞–Ω–∏—Ä—É—é –Ω–∞—á–∞—Ç—å",
        source_no_plans: "–ù–µ –ø–ª–∞–Ω–∏—Ä—É—é –ø—Ä–æ–¥–∞–≤–∞—Ç—å –æ–Ω–ª–∞–π–Ω",
      };

      const sourceName = sourceMap[data || ""];
      if (sourceName) {
        const index = user.sources.indexOf(sourceName);
        if (index > -1) {
          user.sources.splice(index, 1);
        } else {
          user.sources.push(sourceName);
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ—Ç–º–µ—Ç–∫–∞–º–∏
        updateSourcesKeyboard(chatId, user.sources);
      }
    }
  }

  bot.answerCallbackQuery(callbackQuery.id);
});

// –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –æ—Ç–º–µ—Ç–∫–∞–º–∏
function updateSourcesKeyboard(chatId: number, selectedSources: string[]) {
  const keyboard = {
    inline_keyboard: [
      [
        {
          text: selectedSources.includes("Telegram")
            ? "‚úÖ Telegram"
            : "‚ñ´Ô∏è Telegram",
          callback_data: "source_telegram",
        },
      ],
      [
        {
          text: selectedSources.includes("–°–∞–π—Ç") ? "‚úÖ –°–∞–π—Ç" : "‚ñ´Ô∏è –°–∞–π—Ç",
          callback_data: "source_website",
        },
      ],
      [
        {
          text: selectedSources.includes("–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã")
            ? "‚úÖ –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã"
            : "‚ñ´Ô∏è –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã",
          callback_data: "source_marketplaces",
        },
      ],
      [
        {
          text: selectedSources.includes("–°–æ—Ü —Å–µ—Ç–∏")
            ? "‚úÖ –°–æ—Ü —Å–µ—Ç–∏"
            : "‚ñ´Ô∏è –°–æ—Ü —Å–µ—Ç–∏",
          callback_data: "source_social",
        },
      ],
      [
        {
          text: selectedSources.includes("–ï—â–µ –Ω–µ –ø—Ä–æ–¥–∞—é, –Ω–æ –ø–ª–∞–Ω–∏—Ä—É—é –Ω–∞—á–∞—Ç—å")
            ? "‚úÖ –ï—â–µ –Ω–µ –ø—Ä–æ–¥–∞—é, –Ω–æ –ø–ª–∞–Ω–∏—Ä—É—é –Ω–∞—á–∞—Ç—å"
            : "‚ñ´Ô∏è –ï—â–µ –Ω–µ –ø—Ä–æ–¥–∞—é, –Ω–æ –ø–ª–∞–Ω–∏—Ä—É—é –Ω–∞—á–∞—Ç—å",
          callback_data: "source_planning",
        },
      ],
      [
        {
          text: selectedSources.includes("–ù–µ –ø–ª–∞–Ω–∏—Ä—É—é –ø—Ä–æ–¥–∞–≤–∞—Ç—å –æ–Ω–ª–∞–π–Ω")
            ? "‚úÖ –ù–µ –ø–ª–∞–Ω–∏—Ä—É—é –ø—Ä–æ–¥–∞–≤–∞—Ç—å –æ–Ω–ª–∞–π–Ω"
            : "‚ñ´Ô∏è –ù–µ –ø–ª–∞–Ω–∏—Ä—É—é –ø—Ä–æ–¥–∞–≤–∞—Ç—å –æ–Ω–ª–∞–π–Ω",
          callback_data: "source_no_plans",
        },
      ],
      [{ text: "‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data: "sources_done" }],
    ],
  };

  bot
    .editMessageReplyMarkup(keyboard, {
      chat_id: chatId,
      message_id: userData[chatId].step === 1 ? undefined : undefined,
    })
    .catch(() => {
      // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      bot.sendMessage(
        chatId,
        "1. –£–∫–∞–∂–∏—Ç–µ –≤–∞—à–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤ (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ):",
        {
          reply_markup: keyboard,
        }
      );
    });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on("message", (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  if (!text || text.startsWith("/")) return;
  if (!userData[chatId]) return;

  const user = userData[chatId];

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö
  if (user.step === 1.1) {
    user.marketplaces = text;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Ü —Å–µ—Ç—è—Ö
    if (user.sources.includes("–°–æ—Ü —Å–µ—Ç–∏") && !user.socialNetworks) {
      bot.sendMessage(chatId, "–£–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ:");
      user.step = 1.2;
    } else {
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫–æ –≤—Ç–æ—Ä–æ–º—É –≤–æ–ø—Ä–æ—Å—É
      askSecondQuestion(chatId);
    }
    return;
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ—Ü —Å–µ—Ç—è—Ö
  if (user.step === 1.2) {
    user.socialNetworks = text;
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫–æ –≤—Ç–æ—Ä–æ–º—É –≤–æ–ø—Ä–æ—Å—É
    askSecondQuestion(chatId);
    return;
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å
  if (user.step === 2) {
    user.telegramReason = text;
    askThirdQuestion(chatId);
    return;
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Ç—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å (–∫–æ–Ω—Ç–∞–∫—Ç—ã)
  if (user.step === 3) {
    user.contacts = text;
    finishSurvey(chatId);
    return;
  }
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Sheets API
const GOOGLE_SHEETS_ID = process.env.GOOGLE_SHEETS_ID;
const GOOGLE_SERVICE_ACCOUNT_EMAIL = process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL;
const GOOGLE_PRIVATE_KEY = process.env.GOOGLE_PRIVATE_KEY?.replace(
  /\\n/g,
  "\n"
);

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Google Sheets API
async function initGoogleSheets() {
  if (
    !GOOGLE_SHEETS_ID ||
    !GOOGLE_SERVICE_ACCOUNT_EMAIL ||
    !GOOGLE_PRIVATE_KEY
  ) {
    throw new Error("–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Google Sheets API");
  }

  const auth = new google.auth.GoogleAuth({
    credentials: {
      client_email: GOOGLE_SERVICE_ACCOUNT_EMAIL,
      private_key: GOOGLE_PRIVATE_KEY,
    },
    scopes: ["https://www.googleapis.com/auth/spreadsheets"],
  });

  const sheets = google.sheets({ version: "v4", auth });
  return sheets;
}

// –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ Google Sheets
async function saveToGoogleSheets(chatId: number, user: UserData) {
  try {
    const sheets = await initGoogleSheets();

    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø–∏—Å–∏
    const rowData = [
      new Date().toLocaleString("ru-RU"),
      chatId.toString(),
      user.sources.join(", "),
      user.marketplaces || "",
      user.socialNetworks || "",
      user.telegramReason || "",
      user.contacts || "",
    ];

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ
    const headerCheck = await sheets.spreadsheets.values.get({
      spreadsheetId: GOOGLE_SHEETS_ID,
      range: "A1:G1",
    });

    // –ï—Å–ª–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö
    if (!headerCheck.data.values || headerCheck.data.values.length === 0) {
      const headers = [
        "–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è",
        "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        "–ò—Å—Ç–æ—á–Ω–∏–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤",
        "–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã",
        "–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏",
        "–ö–∞–∫ –ø—Ä–∏—à–ª–∏ –∫ Telegram",
        "–ö–æ–Ω—Ç–∞–∫—Ç—ã",
      ];

      await sheets.spreadsheets.values.append({
        spreadsheetId: GOOGLE_SHEETS_ID,
        range: "A1",
        valueInputOption: "RAW",
        requestBody: {
          values: [headers],
        },
      });
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await sheets.spreadsheets.values.append({
      spreadsheetId: GOOGLE_SHEETS_ID,
      range: "A:G",
      valueInputOption: "RAW",
      requestBody: {
        values: [rowData],
      },
    });

    console.log(
      `‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Google Sheets: https://docs.google.com/spreadsheets/d/${GOOGLE_SHEETS_ID}`
    );
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ Google Sheets:", error);
    throw error;
  }
}

// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–ø—Ä–æ—Å–∞
async function finishSurvey(chatId: number) {
  const user = userData[chatId];

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Google Sheets
  try {
    await saveToGoogleSheets(chatId, user);
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ Google Sheets:", error);
  }

  // –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
  let summary = "üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ –æ–ø—Ä–æ—Å–µ!\n\n";
  summary += "üìã –í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã:\n\n";
  summary += `1Ô∏è‚É£ –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤: ${user.sources.join(", ")}\n`;

  if (user.marketplaces) {
    summary += `   üì¶ –ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã: ${user.marketplaces}\n`;
  }

  if (user.socialNetworks) {
    summary += `   üì± –°–æ—Ü —Å–µ—Ç–∏: ${user.socialNetworks}\n`;
  }

  summary += `\n2Ô∏è‚É£ –ö–∞–∫ –ø—Ä–∏—à–ª–∏ –∫ Telegram: ${user.telegramReason}\n\n`;
  summary += `3Ô∏è‚É£ –ö–æ–Ω—Ç–∞–∫—Ç—ã: ${user.contacts}\n\n`;
  summary +=
    "‚úÖ –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–≤—å—é!\n\n";
  summary +=
    "üéÅ –ù–µ –∑–∞–±—É–¥—å—Ç–µ - –≤–∞—Å –∂–¥—ë—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –Ω–∞ 3 –≥–æ–¥–∞!";

  bot.sendMessage(chatId, summary);

  // –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  console.log("üìä Survey completed for user:", chatId);
  console.log("üìÑ Results:", JSON.stringify(user, null, 2));

  // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  delete userData[chatId];
}

// Express routes –¥–ª—è Vercel
app.get("/", (_req, res) => res.send("Botler Survey Bot is running!"));

app.listen(3000, () => console.log("Server ready on port 3000."));

module.exports = app;
